#!/usr/bin/env bash
#
# Based on https://www.compoundtheory.com/provision-your-local-machines/
#
# .........?
#set -x verbose #echo on

workspace="/f/dev/work"
machine="$1"
ansible="$workspace/ansible"
ansible_git="https://github.com/ansible/ansible.git"
dot_files="$workspace/vmifiles/$machine"

#======================================================================
#
#   devstart
#
#   Starts up the development vm, setting up vagrant with what'set
#     necessary to provision by Ansible
#
devstart()
{
  echo "====================================="
  echo "=  RoR Development in a VM: STARTUP"
  echo "====================================="
  echo "= Worskpace: [$workspace]"
  echo "= Machine: [$machine]"
  echo "= "
  
  # only the bare necessities to get to Ansible setting everything update

  #----------------------------------------------
  #  Prepare for Vagrant
  #
  
  echo "Getting situated."

  cd $workspace

  echo "Preparing for local virtual machine..."

  vagrant plugin update vagrant-vbguest

  if [ ! -d "$machine" ]; then
    mkdir $machine
    # TODO:  git clone files    
  fi

  cd $machine

  # check if vagrant initialized
  if [ ! -f "Vagrantfile" ]; then
    vagrant init    
    if [ $? -ne 0]; then
      echo "...........GODEV ERROR: vagrant init failed."  
      exit 3
    fi
  fi
  
  #----------------------------------------------
  #  Update the vagrant and provision files
  #  from the git repository
  
  cd $workspace/vmfiles
  
  # update git local from the repository
  
  
  # TODO: if no git, clone;
  # TODO: otherwise, update
  
  
  
}

#======================================================================
#
#   devstop
#
#   Stops the development vm and cleans up, ready for host machine
#     shutdown
#
devstop()
{
  echo "====================================="
  echo "=  STOP"
  echo "====================================="
  echo "= Worskpace: $workspace"
  echo "= Machine: $machine"
  echo "= "
  
  cd $workspace/$machine
  #vagrant halt
  #copy changed dotfiles back to local repo
  #commit local repo
}

#======================================================================
#
#   Shell script's main body
#

#----------------------------------------------
#   Validate inputs
#
workspace="/f/dev/work"
machine="$1"
ansible="$workspace/ansible"
ansible_git="https://github.com/ansible/ansible.git"
dot_files="$workspace/vmfiles/$machine"

echo "...........GODEV:  1=[$1] 2=[$2]"
echo "...........GODEV:  workspace=$workspace"
echo "...........GODEV:  machine=$machine"
echo "...........GODEV:  ansible=$ansible"
echo "...........GODEV:  ansible_git=$ansible_git"
echo "...........GODEV:  dot_files=$dot_files"
echo ""

if [ -z "$1" ]; then
  echo "...........GODEV ERROR: no machine given."
  exit 1
fi

#----------------------------------------------
#
#  start or stop development environment
#

if [ "$2" = "stop" ]; then
  devstop
elif [ -z "$2" ]; then
  echo "starting..."
  devstart
fi

exit 0
